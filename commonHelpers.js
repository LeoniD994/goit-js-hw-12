import{a as h,S as g,i as n}from"./assets/vendor-b11e2a50.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&r(u)}).observe(document,{childList:!0,subtree:!0});function i(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(e){if(e.ep)return;e.ep=!0;const o=i(e);fetch(e.href,o)}})();const p="44002724-78e4880ab6dd2cf163db4493f",L="https://pixabay.com/api/";async function f(s,t=1,i=15){try{return(await h.get(L,{params:{key:p,q:s,image_tupe:"photo",orientation:"horizontal",safesearch:!0,page:t,perPage:i}})).data}catch(r){throw console.error("Error fetching images:",r),r}}const b=new g(".gallery a",{});function v(){document.querySelector(".gallery").innerHTML=""}function m(s){const t=document.querySelector(".gallery"),i=s.map(r=>`
      <div class="gallery-item">
      <a href="${r.largeImageURL}" class="gallery__link">
        <img src="${r.webformatURL}" alt="${r.tags}" loading="lazy" />
        </a>         
          <ul>
            <li><p>Likes: ${r.likes}</p></li>
            <li><p>Views: ${r.views}</p></li>
            <li><p>Comments: ${r.comments}</p></li>
            <li><p>Downloads: ${r.downloads}</p></li>
          </ul>
      </div>
  `).join("");t.insertAdjacentHTML("beforeend",i),b.refresh()}const y=document.querySelector("#search-form"),w=y.querySelector('input[name="searchQuery"]'),S=document.querySelector(".gallery"),c=document.querySelector(".load-more"),d=document.querySelector(".loader");let a=1,l="";y.addEventListener("submit",q);c.addEventListener("click",E);async function q(s){if(s.preventDefault(),l=w.value.trim(),!l){n.error({title:"Error",message:"Search query cannot be empty!"});return}v(),a=1,c.classList.add("hidden"),d.classList.remove("hidden");try{const t=await f(l,a);t.hits.length===0?n.warning({title:"No Results",message:"No images found for your search query. Please try again!"}):(m(t.hits),t.totalHits>a*15&&c.classList.remove("hidden"))}catch{n.error({title:"Error",message:"Failed to fetch images. Please try again later."})}finally{d.classList.add("hidden")}}async function E(){a+=1,d.classList.remove("hidden");try{const s=await f(l,a);m(s.hits);const{height:t}=S.firstElementChild.getBoundingClientRect();window.scrollBy({top:t*2,behavior:"smooth"}),s.totalHits<=a*15&&(c.classList.add("hidden"),n.info({title:"End of Results",message:"We're sorry, but you've reached the end of search results."}))}catch{n.error({title:"Error",message:"Failed to fetch images. Please try again later."})}finally{d.classList.add("hidden")}}
//# sourceMappingURL=commonHelpers.js.map
